{"version":3,"sources":["webpack:///./src/app/dashboard/lazy-dashboard-tile/lazy-dashboard-tile.component.css","webpack:///./src/app/dashboard/lazy-dashboard-tile/lazy-dashboard-tile.component.html","webpack:///./src/app/dashboard/lazy-dashboard-tile/lazy-dashboard-tile.component.ts","webpack:///./src/app/dashboard/lazy-dashboard-tile/lazy-dashboard-tile.module.ts"],"names":[],"mappings":";;;;;;;;;AAAA,+DAA+D,2L;;;;;;;;;;;ACA/D,wKAAwK,2I;;;;;;;;;;;;;;;;;ACA/G;AAOzD;IAQE;QAFA,SAAI,GAAW,EAAE,CAAC;IAEF,CAAC;IAEjB,6CAAQ,GAAR;QACE,IAAI,CAAC,IAAI,GAAG;YACV;gBACE,IAAI,EAAE,GAAG;gBACT,KAAK,EAAE,IAAI,CAAC,CAAC;aACd;YACD;gBACE,IAAI,EAAE,GAAG;gBACT,KAAK,EAAE,IAAI,CAAC,CAAC;aACd;YACD;gBACE,IAAI,EAAE,GAAG;gBACT,KAAK,EAAE,IAAI,CAAC,CAAC;aACd;SACF,CAAC;IAEJ,CAAC;IAxBQ;QAAR,2DAAK,EAAE;;yDAAW;IACV;QAAR,2DAAK,EAAE;;yDAAW;IACV;QAAR,2DAAK,EAAE;;yDAAW;IAJR,0BAA0B;QALtC,+DAAS,CAAC;YACT,QAAQ,EAAE,yBAAyB;YACnC,uJAAmD;;SAEpD,CAAC;;OACW,0BAA0B,CA4BtC;IAAD,iCAAC;CAAA;AA5BsC;;;;;;;;;;;;;;;;;;;;;;ACPY;AACJ;AAC8B;AACrB;AACD;AAcvD;IAEE,iCAAoB,QAAkB;QAAlB,aAAQ,GAAR,QAAQ,CAAU;QACpC,IAAM,UAAU,GAAG,6EAAmB,CAAC,yFAA0B,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;QAChG,cAAc,CAAC,MAAM,CAAC,qBAAqB,EAAE,UAAU,CAAC,CAAC;IAC3D,CAAC;IALU,uBAAuB;QAZnC,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,oEAAe;aAChB;YACD,YAAY,EAAE;gBACZ,yFAA0B;aAC3B;YACD,eAAe,EAAE;gBACf,yFAA0B;aAC3B;SACF,CAAC;+EAG8B,sDAAQ;OAF3B,uBAAuB,CAOnC;IAAD,8BAAC;CAAA;AAPmC","file":"src-app-dashboard-lazy-dashboard-tile-lazy-dashboard-tile-module.js","sourcesContent":["module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZC9sYXp5LWRhc2hib2FyZC10aWxlL2xhenktZGFzaGJvYXJkLXRpbGUuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"card\\\">\\n  <div class=\\\"header\\\">\\n    <h1 class=\\\"title\\\">Lazy</h1>\\n  </div>\\n  <div class=\\\"content\\\">\\n    <div style=\\\"height:200px;\\\">\\n      <ngx-charts-bar-vertical [xAxis]=\\\"true\\\" [results]=\\\"data\\\">\\n      </ngx-charts-bar-vertical>\\n\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-lazy-dashboard-tile',\n  templateUrl: './lazy-dashboard-tile.component.html',\n  styleUrls: ['./lazy-dashboard-tile.component.css']\n})\nexport class LazyDashboardTileComponent implements OnInit {\n  \n  @Input() a: number;\n  @Input() b: number;\n  @Input() c: number;\n\n  data: object = {};\n\n  constructor() { }\n\n  ngOnInit() {\n    this.data = [\n      {\n        name: 'a',\n        value: this.a\n      },\n      {\n        name: 'b',\n        value: this.b\n      },     \n      {\n        name: 'c',\n        value: this.c\n      }\n    ];\n\n  }\n\n}\n\n","import { NgModule, Injector } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LazyDashboardTileComponent } from './lazy-dashboard-tile.component';\nimport { createCustomElement } from '@angular/elements';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NgxChartsModule\n  ],\n  declarations: [\n    LazyDashboardTileComponent\n  ],\n  entryComponents: [\n    LazyDashboardTileComponent\n  ]\n})\nexport class LazyDashboardTileModule { \n\n  constructor(private injector: Injector) {\n    const lazyTileCE = createCustomElement(LazyDashboardTileComponent, { injector: this.injector });\n    customElements.define('lazy-dashboard-tile', lazyTileCE);\n  }\n\n}\n"],"sourceRoot":""}